logging:

  level: INFO

  loggers:

    # Overrides the level of com.example.dw.Thing and sets it to DEBUG.
    "com.xively": DEBUG

  # ...
  # Settings for logging to stdout.
  console:

    # If true, write log statements to stdout.
    enabled: true

    # Do not display log statements below this threshold to stdout.
    threshold: ALL

  # ...
  # Settings for logging to a file.
  file:

    # If true, write log statements to a file.
    enabled: false

    # Do not write log statements below this threshold to the file.
    threshold: ALL

    # The file to which current statements will be logged.
    currentLogFilename: ./logs/xively-hypercat.log

    # When the log file rotates, the archived log will be renamed to this and gzipped. The
    # %d is replaced with the previous day (yyyy-MM-dd). Custom rolling windows can be created
    # by passing a SimpleDateFormat-compatible format as an argument: "%d{yyyy-MM-dd-hh}".
    archivedLogFilenamePattern: ./logs/xively-hypercat-%d.log.gz

    # The number of archived files to keep.
    archivedFileCount: 5

    # The timezone used to format dates. HINT: USE THE DEFAULT, UTC.
    timeZone: UTC

# HTTP-specific options.
http:

  # The port on which the HTTP server listens for service requests.
  # Because Java cannot drop privileges in a POSIX system, these
  # ports cannot be in the range 1-1024. A port value of 0 will
  # make the OS use an arbitrary unused port.
  port: 8080

  # The port on which the HTTP server listens for administrative
  # requests. Subject to the same limitations as "port". If this is
  # set to the same value as port, the admin routes will be mounted
  # under /admin.
  adminPort: 8081

  # The minimum number of threads to keep running to process
  # incoming HTTP requests.
  minThreads: 8

  # The maximum number of threads to keep running to process
  # incoming HTTP requests.
  maxThreads: 1024

  # The type of connector to use.
  #
  # Possible values are:
  #   * blocking: Good for low-latency services with short request
  #               durations. Corresponds to Jetty's
  #               BlockingChannelConnector.
  #   * nonblocking: Good for services which use Servlet 3.0
  #                  continuations or which maintain a large number
  #                  of open connections. Corresponds to Jetty's
  #                  SelectChannelConnector.
  #   * legacy: Simple, java.io.Socket-based connector. Corresponds to
  #             Jetty's SocketConnector.
  #   * legacy+ssl: Corresponds to Jetty's SslSocketConnector.
  #   * nonblocking+ssl: Corresponds to Jetty's
  #                      SslSelectChannelConnector.
  connectorType: blocking

  # The maximum amount of time a connection is allowed to be idle
  # before being closed.
  maxIdleTime: 200s

  # The number of threads dedicated to accepting connections.
  acceptorThreads: 1

  # The offset of the acceptor threads' priorities. Can be
  # [-5...5], with -5 dropping the acceptor threads to the lowest
  # possible priority and with 5 raising them to the highest priority.
  acceptorThreadPriorityOffset: 0

  # The number of unaccepted requests to keep in the accept queue
  # before refusing connections. If set to -1 or omitted, the system
  # default is used.
  acceptQueueSize: -1

  # The maximum number of buffers to keep in memory.
  maxBufferCount: 1024

  # The initial buffer size for reading requests.
  requestBufferSize: 16KB

  # The initial buffer size for reading request headers.
  requestHeaderBufferSize: 6KB

  # The initial buffer size for writing responses.
  responseBufferSize: 32KB

  # The initial buffer size for writing response headers.
  responseHeaderBufferSize: 6KB

  # Enables SO_REUSEADDR on the server socket.
  reuseAddress: true

  # Enables SO_LINGER on the server socket with the specified
  # linger time. By default, uses the system default.
  soLingerTime: null

  # The number of open connections at which the server transitions
  # to a "low-resources" mode. (Only valid if connectorType is
  # "nonblocking".)
  lowResourcesConnectionThreshold: 25000

  # When in low-resources mode, the maximum amount of time a
  # connection is allowed to be idle before being closed. Overrides
  # maxIdleTime. (Only valid if connectorType is "nonblocking".)
  lowResourcesMaxIdleTime: 5s

  # If non-zero, the server will allow worker threads to finish
  # processing requests after the server socket has been closed for
  # the given amount of time.
  shutdownGracePeriod: 2s

  # If true, allows usage of the Server header in responses.
  useServerHeader: false

  # If true, allows usage of the Date header in responses.
  useDateHeader: true

  # If true, the HTTP server will prefer X-Forwarded headers over
  # their non-forwarded equivalents.
  useForwardedHeaders: true

  # If true, forces the HTTP connector to use off-heap, direct
  # buffers.
  useDirectBuffers: true

  # The hostname of the interface to which the HTTP server socket
  # will be bound. If omitted, the socket will listen on all
  # interfaces.
  bindHost: @OPENSHIFT_INTERNAL_IP@

  # If specified, adds Basic Authentication to the admin port using
  # this username.
  adminUsername: null

  # If specified, adds Basic Authentication to the admin port using
  # this password. (Requires adminUsername to be specified).
  adminPassword: null

  # A map of servlet context parameter names to servlet context
  # parameter values.
  contextParameters: {}

  # Configuration parameters for GZIP encoding of response entities.
  gzip:

    # If true, all requests with gzip in their
    # Accept-Content-Encoding headers will have their response
    # entities encoded with gzip.
    enabled: true

    # All response entities under this size are not compressed.
    minimumEntitySize: 256 bytes

    # The size of the buffer to use when compressing.
    bufferSize: 8KiB

    # The set of user agents to exclude from compression.
    excludedUserAgents: []

    # If specified, the set of mime types to compress.
    compressedMimeTypes: []


template: Hello, %s!
defaultName: Stranger
